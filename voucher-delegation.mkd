---
title: Delegated Authority for Bootstrap Voucher Artifacts
abbrev: delegated-voucher
docname: draft-richardson-anima-voucher-delegation-00

# stand_alone: true

ipr: trust200902
area: Internet
wg: anima Working Group
kw: Internet-Draft
cat: std

pi:    # can use array (if all yes) or hash here
  toc: yes
  sortrefs:   # defaults to yes
  symrefs: yes

author:

- ins: M. Richardson
  name: Michael Richardson
  org: Sandelman Software Works
  email: mcr+ietf@sandelman.ca

normative:
  RFC8174:
  RFC8366:
  I-D.ietf-anima-bootstrapping-keyinfra:
  I-D.ietf-anima-constrained-voucher:

informative:
  RFC3688:
  RFC8572:
  RFC8040:
  RFC5652:
  RFC6241:
  RFC8407:
  RFC6020:

--- abstract

This document describes an extension of the RFC8366 Voucher Artifact
in order to support delegation of signing authority.  The initial voucher
pins a public identity, and that public indentity can then issue additional
vouchers.  This chain of authorization can support permission-less resale
of devices, as well as guarding against business failure of the
BRSKI Manufacturer Authorized Signing Authority (MASA).

--- middle

# Introduction

The {{RFC8366}} voucher artifact provides a proof from a manufacturer's
authorizing signing authority (MASA) of the intended owner of a device.  This is
used by an onboarding Pledge device in BRSKI ({{I-D.ietf-anima-bootstrapping-keyinfra}},
{{I-D.ietf-anima-constrained-voucher}}), and SZTP ({{RFC8572}}).

There are a number of criticisms of the MASA concept.  They include:

* unless a nonceless voucher is used (which often will have no useful expiry
  date) then the MASA must be reachable to the Registar during the onboarding
  process.

* the MASA must approve also transfers, impacting the rights of the initial seller to transfer ownership as they see fit.

* if the Registrar has any nonceless vouchers, then it can not change it's public key, nor can it change which certification authority it uses

* it is not possible for a MASA to pin ownership to a Registrar by Certification Authority plus DN

* the creator of an assembly of parts/components can not become the MASA for the entire assembly of parts

## Requirements for the delegation

This voucher artifact satisfies the following requirements.

### Disconnected or Offline MASA

A Registrar wishes to onboard devices while not being connected to the
Internet.

### Resale of devices

An owner of a device wishes to resale devices which have previously been
onboarded to a third party without specific authorization from the
manufacturer.

### Crypto-agility for Registrar

The owner/manager of a registrar wishes to be able to replace its domain
registration key.
Replacing the registration key would invalidate any previously acquired
(nonceless) vouchers.
Any devices which have not been onboarded, or which need to be factory reset,
would not trust a replacement key.

### Transparent Assemblers/Value-Added-Resellers

An assembly may consist of a number of parts which are onboarded to a local
controller during the manufacturing process.
Subsequent to this, the entire assembly will be shipped to a customer who
wishes to onboard all the components.
The sub-components of the assembly needs to communicate with other
sub-components, and so all the parts need to transparently onboarded.
(This is contrasted with an assembly where the controller acts as a security
gateway. Such a gateway might be a single point of failure)

Assemblies may nest quite deeply.

## Overview of proposed solution

The MASA will issue a voucher that delegates it's signing authority for one
or more devices to a specific Registrar.
This is called a "delegation voucher".

This Registrar can then operate as an authorized signing authority for the
manufacturer, and can subsequently issue additional vouchers binding the
pledge to new Registrars.

This delegation can potentially be repeated multiple times to enable second,
third, or n-th level of resale.

The delegation voucher can be provided to the pledge for storage, to be
included by the pledge in subsequent bootstrap operations.
The inclusion of the delegation permits next Registrars with heuristics that
permit it to find the delegated authorized signing service (DASA).

The delegation voucher pins the identity of the delegated authority using a
variety of different mechanisms which are covered in {{pinnedmechanism}}.

# Terminology

{::boilerplate bcp14}

Delegated Authorized Signing Authority :
: the Delegated Authorized Signing Authority (DASA) is a service that can
generate vouchers for one or more pledges to provide bootstrap authority
separate from the manufacturer.

Delgation Voucher:
: a Delegation Voucher is an {{RFC8366}} format voucher that has additional
fields to provide detailed the entity to which authority has been delegated.

# Delegated Voucher artifact

The following tree diagram shows the extensions to the {{RFC8366}} voucher.

There are a few new fields: pinned-delegation-certificate-authority,
pinned-delegation-name, delegation-count.  In addition, the serial-number
field is no longer a plain leaf, but can also be an array.

INSERT_FIG_FROM_FILE ietf-delegated-voucher-tree.txt END

## YANG module

This module uses the grouping that was created in {{RFC8366}} to extend the
definition.

INSERT_FIG_FROM_FILE ietf-delegated-voucher@DATE.yang END

# Constraints on pinning the Delegated Authority {#pinnedmechanism}

TBD

# Applying the delegated voucher to solve problems

TBD

# Enhanced Pledge behaviour

TBD

# Privacy Considerations

YYY

# Security Considerations

## YANG Module Security Considerations

As described in the Security Considerations section of {{RFC8366}} (section 7.4), the YANG module specified
in this document defines the schema for data that is subsequently
encapsulated by a CMS signed-data content type, as described in Section 5 of
{{RFC5652}}. As such, all of the YANG modeled data is protected from modification.

The use of YANG to define data structures, via the 'yang-data'
statement, is relatively new and distinct from the traditional use
of YANG to define an API accessed by network management protocols
such as NETCONF {{RFC6241}} and RESTCONF {{RFC8040}}.
For this reason, these guidelines do not follow template described by
Section 3.7 of {{RFC8407}}.

# IANA Considerations

This document requires the following IANA actions:

## The IETF XML Registry

This document registers a URI in the "IETF XML Registry" {{RFC3688}}.
IANA is asked to register the following:


~~~~
     URI: urn:ietf:params:xml:ns:yang:ietf-delegated-voucher
     Registrant Contact: The ANIMA WG of the IETF.
     XML: N/A, the requested URI is an XML namespace.
~~~~

## YANG Module Names Registry

This document registers a YANG module in the "YANG Module Names" registry {{RFC6020}}.
IANA is asked to register the following:

~~~~
     name:         ietf-delegated-voucher
     namespace:    urn:ietf:params:xml:ns:yang:ietf-delegated-voucher
     prefix:       NONE
     reference:    THIS DOCUMENT
~~~~


# Acknowledgements

Hello.

# Changelog

--- back

# Extra references

RFC Editor, please remove this section.
This section lists references in the YANG. {{RFC8174}}, {{RFC8040}}.


